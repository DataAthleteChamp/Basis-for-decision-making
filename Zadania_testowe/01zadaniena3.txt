/*********************************************
 * OPL 22.1.1.0 Model
 * Author: Lenovo
 * Creation Date: 17 kwi 2023 at 21:13:59
 *********************************************/

 
 // Parametry wejściowe:
int p = 10; // Liczba zadań
int m = 2; // Liczba maszyn
int k = 18; // Ograniczenie czasowe dla każdej maszyny
range Tasks = 1..p;
range Machines = 1..m;

// Przykładowe wartości macierzy czasów realizacji zadań:
int processingTime[Tasks][Machines] = [
  // Maszyna 1, Maszyna 2
  [3, 5],
  [4, 6],
  [2, 3],
  [7, 8],
  [3, 4],
  [6, 9],
  [1, 3],
  [5, 7],
  [4, 6],
  [6, 8]
];

// Przykładowe wartości ograniczeń czasowych realizacji zadań:
int deadline[Tasks] = [14, 12, 18, 20, 16, 24, 10, 22, 19, 25];

// Zmienne decyzyjne:
dvar boolean x[Tasks][Machines]; // Przypisanie zadania do maszyny
dvar int y[Machines]; // Czas pracy maszyny

// Funkcja celu: minimalizacja czasu pracy najdłużej przetwarzającej maszyny
minimize max(i in Machines) y[i];

// Ograniczenia:
subject to {
  // Każde zadanie musi być przypisane do jednej maszyny
  forall(t in Tasks)
    sum(m in Machines) x[t][m] == 1;

  // Czas pracy maszyny nie może przekraczać ograniczenia k
  forall(m in Machines)
    y[m] <= k;

  // Czas pracy maszyny obejmuje wszystkie przypisane zadania
  forall(m in Machines)
    y[m] >= sum(t in Tasks) x[t][m] * processingTime[t][m];

  // Czas realizacji zadania musi być mniejszy niż jego deadline
  forall(t in Tasks)
    sum(m in Machines) x[t][m] * processingTime[t][m] <= deadline[t];
}
 